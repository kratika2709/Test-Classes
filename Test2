#Apex
public class CasesRelatedToSubject {
    Static List<List<sObject>> relatedCases = new List<List<sObject>>();
    @auraEnabled
	public static List<sObject> searchCases(id openedCaseId)
    {
        Case c = [select subject from case where Id =: openedCaseId];
        system.debug('Case Subject'+c.subject);
		String [] words = (c.Subject).split(' ');
        for(String word : words)
         {
            if(word != 'is' && word != 'a' && word != 'the' )
            {
                List<List<sObject>> cases = new List<List<sObject>>();
                  cases = [find :word returning Case(id,CaseNumber,subject where Status = 'new')];
                relatedCases.add(cases[0]);
            }
        }
         
      
      system.debug('relatedCases'+relatedCases);
      List<sObject> cases = new List<sObject>();
        for(List<sObject> caser : relatedCases)
        {
          for(sObject cs : caser)
          {
              if(cs.id != openedCaseId )
              cases.add(cs);
          }
        }
        system.debug('Case reated to subject'+cases);
        return cases;
    }
    
}
========================================
#Test
@istest
public class TestCasesRelatedToSubject {
    @testsetup
    static  void setup()
    {
        list<case> cslst= new list<case>();
        for(integer i=0;i<=25;i++){
            case cs = new case(status='New',Subject='TsetCase'+i);
            cslst.add(cs);
        }
     insert cslst;
    }
    @istest static void searchCasestest(){
        case c = [select id,status,subject from case where Subject='TsetCase3'];
        list<case> cases = new list<case>();
        cases = CasesRelatedToSubject.searchCases(c.id);
        system.assertEquals('TsetCase3',cases[3].subject);
    }
}
